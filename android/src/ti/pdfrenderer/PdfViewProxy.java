/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2017 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.pdfrenderer;

import java.io.IOException;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.io.TiBaseFile;
import org.appcelerator.titanium.io.TiFileFactory;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.util.TiUIHelper;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiUIView;

import android.app.Activity;
import android.graphics.Bitmap;
import android.graphics.pdf.PdfRenderer.Page;
import android.widget.ImageView;

// This proxy can be created by calling Pdfrenderer.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule = PdfrendererModule.class)
public class PdfViewProxy extends TiViewProxy {
	// Standard Debugging variables
	private static final String LCAT = "TiPdf";
	private Bitmap bitmap;
	

	private class Pdfview extends TiUIView {
		public Pdfview(TiViewProxy proxy) {
			super(proxy);
			LayoutArrangement arrangement = LayoutArrangement.DEFAULT;
			TiCompositeLayout container = new TiCompositeLayout(proxy.getActivity(), arrangement);
			ImageView nativeView = new ImageView(proxy.getActivity());
			container.addView(nativeView);
			nativeView.setImageBitmap(bitmap);
			setNativeView(container);
		}

		@Override
		public void processProperties(KrollDict d) {
			super.processProperties(d);
		}
	}

	// Constructor
	public PdfViewProxy() {
		super();
	}

	@Override
	public TiUIView createView(Activity activity) {
		TiUIView view = new Pdfview(this);
		view.getLayoutParams().autoFillsHeight = true;
		view.getLayoutParams().autoFillsWidth = true;

		return view;
	}

	// Handle creation options
	@Override
	public void handleCreationDict(KrollDict options) {
		int renderMode = 0;
		super.handleCreationDict(options);

		if (options.containsKey("renderMode")) {
			renderMode = options.getInt("renderMode");
		}
		if (options.containsKey("page")) {
			Object o = options.get("page");
			if (o instanceof PageProxy) {

				Page page = ((PageProxy) o).getPage();

				if (bitmap != null)
					page.render(bitmap, null, null, renderMode);
			}
		}
		bitmap = loadImageFromApplication("pdf.png");
	}

	private Bitmap loadImageFromApplication(String imageName) {
		Bitmap bitmap = null;
		String url = null;
		try {
			url = resolveUrl(null, imageName);
			TiBaseFile file = TiFileFactory.createTitaniumFile(new String[] { url }, false);
			bitmap = TiUIHelper.createBitmap(file.getInputStream());
		} catch (IOException e) {
			Log.e(LCAT, " WheelView only supports local image files " + url);
		}
		return bitmap;
	}

}
