/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2017 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.pdfrenderer;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiC;
import org.appcelerator.titanium.io.TiBaseFile;
import org.appcelerator.titanium.io.TiFile;
import org.appcelerator.titanium.io.TiFileFactory;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.util.TiConvert;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiUIView;

import android.app.Activity;
import android.graphics.pdf.PdfRenderer;
import android.os.ParcelFileDescriptor;
import ti.modules.titanium.filesystem.FileProxy;


// This proxy can be created by calling Pdfrenderer.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule=PdfrendererModule.class)
public class ViewProxy extends TiViewProxy
{
	// Standard Debugging variables
	private static final String LCAT = "ExampleProxy";
	private static final boolean DBG = TiConfig.LOGD;

	private class Pdfview extends TiUIView
	{
		public Pdfview(TiViewProxy proxy) {
			super(proxy);
			LayoutArrangement arrangement = LayoutArrangement.DEFAULT;

			if (proxy.hasProperty(TiC.PROPERTY_LAYOUT)) {
				String layoutProperty = TiConvert.toString(proxy.getProperty(TiC.PROPERTY_LAYOUT));
				if (layoutProperty.equals(TiC.LAYOUT_HORIZONTAL)) {
					arrangement = LayoutArrangement.HORIZONTAL;
				} else if (layoutProperty.equals(TiC.LAYOUT_VERTICAL)) {
					arrangement = LayoutArrangement.VERTICAL;
				}
			}
			setNativeView(new TiCompositeLayout(proxy.getActivity(), arrangement));
		}

		@Override
		public void processProperties(KrollDict d)
		{
			super.processProperties(d);
		}
	}


	// Constructor
	public ViewProxy()
	{
		super();
	}

	@Override
	public TiUIView createView(Activity activity)
	{
		TiUIView view = new Pdfview(this);
		view.getLayoutParams().autoFillsHeight = true;
		view.getLayoutParams().autoFillsWidth = true;
		return view;
	}

	// Handle creation options
	@Override
	public void handleCreationDict(KrollDict options) {
		super.handleCreationDict(options);
		if (options.containsKey("file")) {
			try {
				ParcelFileDescriptor pfd = ParcelFileDescriptor.open(getFileFromObject(options.get("file")), ParcelFileDescriptor.MODE_READ_ONLY);
				PdfRenderer renderer = new PdfRenderer(pfd);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}

	private File getFileFromObject(Object fileObject) {
		TiBaseFile TiFile = null;
		try {
			if (fileObject instanceof TiFile) {
				Log.d(LCAT, "file is TiFile");
				TiFile = TiFileFactory.createTitaniumFile(((TiFile) fileObject).getFile().getAbsolutePath(), false);
			} else {
				if (fileObject instanceof FileProxy) {
					Log.d(LCAT, "file is FileProxy");
					TiFile = ((FileProxy) fileObject).getBaseFile();
				} else {
					if (fileObject instanceof TiBaseFile) {
						Log.d(LCAT, "file is TiBaseFile");
						TiFile = (TiBaseFile) fileObject;
					} else if (fileObject instanceof String) {
						// see:
						// https://github.com/appcelerator/titanium_mobile/blob/master/android/modules/database/src/java/ti/modules/titanium/database/DatabaseModule.java
						String uriString = resolveUrl(null, (String) fileObject);
						Log.d(LCAT, "resolvedUrl=" + uriString);
						TiFile = TiFileFactory.createTitaniumFile(new String[] { uriString }, false);
					}
				}
			}
			if (TiFile == null) {
				Log.d(LCAT, "TiFile is null");
				return null;
			}
			File file = TiFile.getNativeFile();
			
			return path;

		} catch (Exception e) {
			Log.d(LCAT, e.getMessage());
		}
		return null;
	}

}
